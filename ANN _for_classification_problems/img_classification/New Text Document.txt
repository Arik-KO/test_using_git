import tensorflow as tf
mnist_data = tf.keras.datasets.mnist
(x_train, y_train), (x_test,y_test) = mnist_data.load_data()
print(x_train.shape)
print(y_train.shape)
print(x_test.shape)
print(y_test.shape)
model = tf.keras.models.Sequential([

tf.keras.layers.Flatten(input_shape=(28,28)),
    tf.keras.layers.Dense(128, activation='relu'),
    tf.keras.layers.Dropout(0.2),
tf.keras.layers.Dense(10, activation='softmax'),
    
]
)
model.compile(optimizer='adam',
             loss= 'sparse_categorical_crossentropy',
             metrics=['accuracy'])

model.fit(x_train,y_train, 
          validation_data=(x_test, y_test),
         epochs = 10, 
         verbose = 1,
         )

import matplotlib.pyplot as plt
import pandas as pd
losses = pd.DataFrame(model.history.history)
plt.plot(losses['loss'])
plt.plot(losses['val_loss'])

plt.plot(losses.accuracy)
plt.plot(losses.val_accuracy)

model.evaluate(x_test, y_test)